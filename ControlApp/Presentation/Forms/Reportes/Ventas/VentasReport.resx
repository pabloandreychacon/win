<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="okButton1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>